openapi: 3.0.3
info:
  title: Claude Code CLI API
  description: |
    API specifications for the Anthropic Claude Code CLI tool, covering the main services used:
    
    1. **Claude API** - Main AI service for chat completions and code assistance
    2. **OAuth API** - Authentication service for secure access
    3. **Telemetry API** - Analytics and error reporting service
    
    Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, 
    and helps you code faster through natural language commands.
  version: 1.0.0
  contact:
    name: Anthropic
    url: https://www.anthropic.com
  license:
    name: Commercial Terms of Service
    url: https://www.anthropic.com/legal/commercial-terms

servers:
  - url: https://api.anthropic.com
    description: Claude AI API
  - url: https://auth.anthropic.com
    description: Anthropic OAuth Service
  - url: https://telemetry.anthropic.com
    description: Claude Code Telemetry Service

paths:
  # Claude API Endpoints
  /v1/messages:
    post:
      summary: Create a message completion
      description: |
        Generate a completion for a conversation using Claude. Supports both streaming and non-streaming responses.
        This is the primary endpoint used by Claude Code CLI for AI interactions.
      operationId: createMessage
      tags:
        - Claude API
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
            examples:
              basicCompletion:
                summary: Basic completion request
                value:
                  model: "claude-3-opus-20240229"
                  max_tokens: 1024
                  messages:
                    - role: "user"
                      content: "Explain this code function"
              streamingCompletion:
                summary: Streaming completion request
                value:
                  model: "claude-3-opus-20240229"
                  max_tokens: 1024
                  stream: true
                  messages:
                    - role: "user"
                      content: "Help me debug this error"
      responses:
        '200':
          description: Successful completion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
            text/event-stream:
              schema:
                type: string
                description: Server-sent events for streaming responses
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # OAuth API Endpoints
  /oauth2/auth:
    get:
      summary: OAuth authorization endpoint
      description: |
        Initiates the OAuth authorization flow. Users are redirected to this endpoint to grant permissions.
        Supports PKCE (Proof Key for Code Exchange) for enhanced security.
      operationId: authorize
      tags:
        - OAuth API
      parameters:
        - name: client_id
          in: query
          required: true
          description: The client identifier for Claude Code CLI
          schema:
            type: string
            example: "claude-code-cli"
        - name: redirect_uri
          in: query
          required: true
          description: Redirect URI after authorization
          schema:
            type: string
            format: uri
            example: "http://localhost:3000/callback"
        - name: response_type
          in: query
          required: true
          description: OAuth response type
          schema:
            type: string
            enum: ["code"]
        - name: scope
          in: query
          required: true
          description: Requested permissions
          schema:
            type: string
            example: "anthropic.claude"
        - name: state
          in: query
          required: true
          description: Random state for CSRF protection
          schema:
            type: string
        - name: code_challenge
          in: query
          description: PKCE code challenge
          schema:
            type: string
        - name: code_challenge_method
          in: query
          description: PKCE code challenge method
          schema:
            type: string
            enum: ["S256"]
      responses:
        '302':
          description: Redirect to authorization page or callback
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthErrorResponse'

  /oauth2/token:
    post:
      summary: OAuth token endpoint
      description: |
        Exchange authorization code for access token or refresh an existing token.
        Supports both authorization code exchange and refresh token flows.
      operationId: token
      tags:
        - OAuth API
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AuthorizationCodeRequest'
                - $ref: '#/components/schemas/RefreshTokenRequest'
            examples:
              authorizationCode:
                summary: Exchange authorization code for token
                value:
                  grant_type: "authorization_code"
                  client_id: "claude-code-cli"
                  code: "abc123"
                  redirect_uri: "http://localhost:3000/callback"
                  code_verifier: "dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"
              refreshToken:
                summary: Refresh access token
                value:
                  grant_type: "refresh_token"
                  client_id: "claude-code-cli"
                  refresh_token: "def456"
      responses:
        '200':
          description: Token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthErrorResponse'
        '401':
          description: Invalid client or credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthErrorResponse'

  # Telemetry API Endpoints
  /claude-code/events:
    post:
      summary: Submit telemetry events
      description: |
        Submit anonymous usage data and error reports to help improve Claude Code CLI.
        This endpoint collects non-sensitive telemetry data that can be disabled by users.
      operationId: submitTelemetryEvents
      tags:
        - Telemetry API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TelemetryEvent'
            examples:
              commandExecution:
                summary: Command execution events
                value:
                  - type: "command_execute"
                    timestamp: "2024-01-15T10:30:00Z"
                    properties:
                      command: "edit"
                      args:
                        file: "src/main.js"
                    client:
                      version: "1.0.0"
                      id: "550e8400-e29b-41d4-a716-446655440000"
                      nodeVersion: "v18.19.0"
                      os: "linux"
                      osVersion: "5.4.0"
              errorReport:
                summary: Error reporting
                value:
                  - type: "command_error"
                    timestamp: "2024-01-15T10:31:00Z"
                    properties:
                      error:
                        name: "ValidationError"
                        message: "Invalid file path"
                        category: "USER_ERROR"
                    client:
                      version: "1.0.0"
                      id: "550e8400-e29b-41d4-a716-446655440000"
                      nodeVersion: "v18.19.0"
                      os: "linux"
                      osVersion: "5.4.0"
      responses:
        '200':
          description: Events successfully submitted
        '400':
          description: Invalid event data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key
      description: API key for Claude API authentication

  schemas:
    # Claude API Schemas
    MessageRequest:
      type: object
      required:
        - model
        - messages
        - max_tokens
      properties:
        model:
          type: string
          description: The Claude model to use
          example: "claude-3-opus-20240229"
        messages:
          type: array
          description: The conversation messages
          items:
            $ref: '#/components/schemas/Message'
        max_tokens:
          type: integer
          description: Maximum tokens to generate
          minimum: 1
          maximum: 4096
          example: 1024
        temperature:
          type: number
          description: Sampling temperature (0-1)
          minimum: 0
          maximum: 1
          example: 0.7
        top_p:
          type: number
          description: Top-p sampling parameter
          minimum: 0
          maximum: 1
        top_k:
          type: integer
          description: Top-k sampling parameter
          minimum: 1
        stop_sequences:
          type: array
          description: Sequences that will stop generation
          items:
            type: string
        stream:
          type: boolean
          description: Whether to stream the response
          default: false
        system:
          type: string
          description: System message for context

    Message:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum: ["user", "assistant", "system"]
          description: The role of the message sender
        content:
          type: string
          description: The content of the message

    MessageResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the completion
        model:
          type: string
          description: The model used for generation
        content:
          type: array
          items:
            $ref: '#/components/schemas/ContentBlock'
        usage:
          $ref: '#/components/schemas/Usage'
        stop_reason:
          type: string
          enum: ["end_turn", "max_tokens", "stop_sequence"]
        stop_sequence:
          type: string

    ContentBlock:
      type: object
      properties:
        type:
          type: string
          enum: ["text"]
        text:
          type: string

    Usage:
      type: object
      properties:
        input_tokens:
          type: integer
        output_tokens:
          type: integer

    # OAuth API Schemas
    AuthorizationCodeRequest:
      type: object
      required:
        - grant_type
        - client_id
        - code
        - redirect_uri
      properties:
        grant_type:
          type: string
          enum: ["authorization_code"]
        client_id:
          type: string
        client_secret:
          type: string
        code:
          type: string
        redirect_uri:
          type: string
        code_verifier:
          type: string
          description: PKCE code verifier

    RefreshTokenRequest:
      type: object
      required:
        - grant_type
        - client_id
        - refresh_token
      properties:
        grant_type:
          type: string
          enum: ["refresh_token"]
        client_id:
          type: string
        client_secret:
          type: string
        refresh_token:
          type: string

    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
          example: "Bearer"
        expires_in:
          type: integer
          description: Token lifetime in seconds
        scope:
          type: string

    OAuthErrorResponse:
      type: object
      properties:
        error:
          type: string
          enum: ["invalid_request", "invalid_client", "invalid_grant", "unauthorized_client", "unsupported_grant_type"]
        error_description:
          type: string

    # Telemetry API Schemas
    TelemetryEvent:
      type: object
      required:
        - type
        - timestamp
        - properties
        - client
      properties:
        type:
          type: string
          enum: [
            "cli_start",
            "cli_exit", 
            "command_execute",
            "command_success",
            "command_error",
            "ai_request",
            "ai_response",
            "ai_error",
            "auth_success",
            "auth_error"
          ]
        timestamp:
          type: string
          format: date-time
        properties:
          type: object
          additionalProperties: true
          description: Event-specific properties
        client:
          $ref: '#/components/schemas/ClientInfo'

    ClientInfo:
      type: object
      required:
        - version
        - id
        - nodeVersion
        - os
        - osVersion
      properties:
        version:
          type: string
          description: Claude Code CLI version
        id:
          type: string
          format: uuid
          description: Anonymous client identifier
        nodeVersion:
          type: string
          description: Node.js version
        os:
          type: string
          description: Operating system
        osVersion:
          type: string
          description: Operating system version

    # Common Error Schemas
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            type:
              type: string
            message:
              type: string

tags:
  - name: Claude API
    description: Core AI functionality for chat completions and code assistance
  - name: OAuth API  
    description: Authentication and authorization services
  - name: Telemetry API
    description: Anonymous usage analytics and error reporting 